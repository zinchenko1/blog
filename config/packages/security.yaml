security:
    access_denied_url: index
    encoders:
        App\Entity\User\User:
            algorithm: auto
    role_hierarchy:
        ROLE_ADMIN: ROLE_AUTHOR
        ROLE_SUPER_ADMIN: [ROLE_ADMIN, ROLE_ALLOWED_TO_SWITCH]

    providers:
        app_user_provider:
            entity:
                class: App\Entity\User\User
                property: email
    firewalls:
        dev:
            pattern: ^/(_(profiler|wdt)|css|images|js)/
            security: false
        refresh:
            pattern:  ^/api/token/refresh
            stateless: true
            anonymous: true
        login:
            pattern: ^/api/login
            stateless: true
            anonymous: true
            json_login:
                check_path: /api/login
                username_path: username
                password_path: password
                success_handler: lexik_jwt_authentication.handler.authentication_success
                failure_handler: lexik_jwt_authentication.handler.authentication_failure
            guard:
                authenticators:
                    - App\Security\LoginFormAuthenticator
            logout:
                path: /app_logout

        api:
            pattern:  ^/api/
            stateless: true
            anonymous: false
            provider: app_user_provider
            guard:
                authenticators:
                    - lexik_jwt_authentication.jwt_token_authenticator

        main:
            anonymous: true
            provider: app_user_provider
            guard:
                authenticators:
                    - App\Security\LoginFormAuthenticator
            logout:
                path: app_logout
            oauth:
                resource_owners:
                    facebook:           "/login/check-facebook"
                login_path:        /login
                use_forward:       false
                failure_path:      /login

                oauth_user_provider:
                    service: my.oauth_aware.user_provider.service

    access_control:
        - { path: ^/admin, roles: ROLE_USER }
        - { path: ^/api/login, roles: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/api/token/refresh, roles: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/api/, roles: IS_AUTHENTICATED_FULLY }
        - { path: ^/login, allow_if: "not has_role('ROLE_USER')" }
        - { path: ^/register, allow_if: "not has_role('ROLE_USER')" }
        - { path: ^/connect, roles: IS_AUTHENTICATED_ANONYMOUSLY }